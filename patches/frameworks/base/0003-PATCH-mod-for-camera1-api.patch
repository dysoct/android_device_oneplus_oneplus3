From 9ca3d7c7034983dde5f10992cb810f8b84acba26 Mon Sep 17 00:00:00 2001
From: Kevin Mckee <kxzxxx@gmail.com>
Date: Mon, 21 Aug 2017 12:43:38 +0000
Subject: [PATCH 3/4] [PATCH] mod for camera1 api

Signed-off-by: joshuous <joshuous@gmail.com>
---
 core/java/android/hardware/Camera.java | 172 ++++++++++++++++++++++++++++++++-
 1 file changed, 168 insertions(+), 4 deletions(-)

diff --git a/core/java/android/hardware/Camera.java b/core/java/android/hardware/Camera.java
index 00e92d2..29363ed 100644
--- a/core/java/android/hardware/Camera.java
+++ b/core/java/android/hardware/Camera.java
@@ -15,6 +15,17 @@
  */
 
 package android.hardware;
+import android.hardware.camera2.CameraCharacteristics;
+import android.hardware.camera2.impl.CameraMetadataNative;
+import android.hardware.camera2.CaptureResult;
+import android.hardware.camera2.CaptureRequest;
+import android.hardware.camera2.impl.CaptureResultExtras;
+import android.hardware.camera2.CameraManager;
+import android.content.Context;
+import java.lang.System;
+import java.io.ByteArrayInputStream;
+import java.io.ObjectInputStream;
+import android.hardware.ICameraService;
 
 import android.app.ActivityThread;
 import android.annotation.SdkConstant;
@@ -194,6 +205,81 @@ public class Camera {
     private CameraMetaDataCallback mCameraMetaDataCallback;
     /* ### QC ADD-ONS: END */
 
+    private static final int CAMERA_MSG_AEC = 0x4000;
+    private static final int CAMERA_MSG_DNG_IMAGE= 0x8000;
+    private static final int CAMERA_MSG_DNG_META_DATA = 0x10000;
+    private static final int CAMERA_MSG_IN_PROCESSING = 0x20000;
+    private static final int CAMERA_MSG_RAW_IMAGE_DUMMY = 0x40000;
+
+    private static CameraMetadataNative mMetadata;
+    private long mMetadataPtr; 
+    private CameraCharacteristics mCharacteristics;
+    private android.hardware.Camera.AECallback mAECallback;
+    private android.hardware.Camera.OneplusCallback mOneplusCallback;
+    private android.hardware.Camera.ProcessCallback mProcessCallback;
+    private boolean mIsOPService = false;
+    private android.hardware.Camera.PictureCallback mOPServiceJpegCallback = null;
+
+    public interface AECallback {
+
+        public abstract void onAEChanged(int[] p1, Camera p2);
+
+    }
+
+    public interface OneplusCallback {
+
+        public abstract void onDngImage(byte[] p1, Camera p2);
+
+        public abstract void onDngMetadata(CameraCharacteristics p1, CaptureResult p2, Camera p3);
+
+    }
+
+    public interface ProcessCallback {
+
+        public abstract void onProcess();
+
+    }
+    public void setAECallback(AECallback cb) {
+        mAECallback = cb;
+    }
+    
+    public final void setOneplusCallback(OneplusCallback cb) {
+        mOneplusCallback = cb;
+    }
+    
+    public final void setProcessCallback(ProcessCallback cb) {
+        mProcessCallback = cb;
+    }
+    
+    public void setOPJpegCallback(PictureCallback cb) {
+        mOPServiceJpegCallback = cb;
+    }
+    
+    public final void addDngImageCallbackBuffer(byte[] cb) {
+        addRawImageCallbackBuffer(cb);
+    }
+    
+    public static Camera openOPService() {
+        return null;//return new Camera(-0x1, -0x64);
+    }
+
+    private void getNativeCameraMetadata(int camID){
+    try{
+        ActivityThread am = ActivityThread.currentActivityThread();
+    
+        CameraManager manager = (CameraManager) am.
+        getApplication()
+        .getSystemService(Context.CAMERA_SERVICE);
+        String [] a=manager.getCameraIdList();
+        mCharacteristics = manager.getCameraCharacteristics(a[camID]);
+
+        }catch(Exception exc){
+            Log.e(TAG,"getNativeCameraMetadata error");
+            mCharacteristics = null;
+        }                
+
+    }
+
     /**
      * @deprecated This broadcast is no longer delivered by the system; use
      * {@link android.app.job.JobInfo.Builder JobInfo.Builder}.{@link android.app.job.JobInfo.Builder#addTriggerContentUri}
@@ -504,6 +590,7 @@ public class Camera {
     }
 
     private int cameraInitVersion(int cameraId, int halVersion) {
+        getNativeCameraMetadata(cameraId);
         mShutterCallback = null;
         mRawImageCallback = null;
         mJpegCallback = null;
@@ -515,6 +602,8 @@ public class Camera {
         mCameraDataCallback = null;
         mCameraMetaDataCallback = null;
         /* ### QC ADD-ONS: END */
+        mOneplusCallback = null;
+        mProcessCallback = null;
 
         Looper looper;
         if ((looper = Looper.myLooper()) != null) {
@@ -813,6 +902,7 @@ public class Camera {
         mRawImageCallback = null;
         mPostviewCallback = null;
         mJpegCallback = null;
+        mProcessCallback = null;
         synchronized (mAutoFocusCallbackLock) {
             mAutoFocusCallback = null;
         }
@@ -1156,7 +1246,13 @@ public class Camera {
 
         @Override
         public void handleMessage(Message msg) {
-            switch(msg.what) {
+            int msgID=msg.what;
+
+            if(msgID==CAMERA_MSG_RAW_IMAGE){
+                msgID=CAMERA_MSG_DNG_IMAGE;
+            }
+
+            switch(msgID) {
             case CAMERA_MSG_SHUTTER:
                 if (mShutterCallback != null) {
                     mShutterCallback.onShutter();
@@ -1173,6 +1269,10 @@ public class Camera {
                 if (mJpegCallback != null) {
                     mJpegCallback.onPictureTaken((byte[])msg.obj, mCamera);
                 }
+                else if(mIsOPService&&mOPServiceJpegCallback != null){
+                    Log.d(TAG,"op jpeg callback");
+                    mOPServiceJpegCallback.onPictureTaken((byte[])msg.obj, mCamera);
+                }
                 return;
 
             case CAMERA_MSG_PREVIEW_FRAME:
@@ -1251,6 +1351,52 @@ public class Camera {
                 }
                 return;
             /* ### QC ADD-ONS: END */
+            case CAMERA_MSG_RAW_IMAGE_DUMMY:
+                Log.d(TAG,"CAMERA_MSG_RAW_IMAGE_DUMMY");
+                return;
+
+            case CAMERA_MSG_AEC:
+                Log.d(TAG,"CAMERA_MSG_AEC");
+                if (mAECallback != null) {
+                    int [] states=new int[2];
+                    states[0]=msg.arg1;
+                    states[1]=msg.arg2;
+                    mAECallback.onAEChanged(states,mCamera);
+                }
+                return;
+                
+            case CAMERA_MSG_DNG_IMAGE:
+                Log.d(TAG,"CAMERA_MSG_DNG_IMAGE");
+                if (mOneplusCallback != null) {
+                    mOneplusCallback.onDngImage((byte[])msg.obj, mCamera);
+                }
+                return;
+                
+            case CAMERA_MSG_DNG_META_DATA:
+                Log.d(TAG,"CAMERA_MSG_DNG_META_DATA");
+                if (mOneplusCallback != null
+                    &&mCharacteristics!=null&&mMetadata!=null) {
+
+                    /* if (true) {
+                        Log.v(TAG, "metadata:");
+                        Log.v(TAG, "--------------------------------------------------- (start)");
+                        mMetadata.dumpToLog();
+                        Log.v(TAG, "--------------------------------------------------- (end)");
+                    }*/ 
+
+                    CaptureResult result=new CaptureResult(mMetadata,-1);
+                    mOneplusCallback.onDngMetadata(mCharacteristics, result, mCamera);
+                    
+                }    
+            return;
+            
+            case CAMERA_MSG_IN_PROCESSING:
+                Log.d(TAG,"CAMERA_MSG_IN_PROCESSING");
+                //if (mProcessCallback != null) {
+                //    mProcessCallback.onProcess();
+                //}
+                return;
+
             default:
                 Log.e(TAG, "Unknown message type " + msg.what);
                 return;
@@ -1521,15 +1667,33 @@ public class Camera {
         if (mShutterCallback != null) {
             msgType |= CAMERA_MSG_SHUTTER;
         }
-        if (mRawImageCallback != null) {
-            msgType |= CAMERA_MSG_RAW_IMAGE;
-        }
         if (mPostviewCallback != null) {
             msgType |= CAMERA_MSG_POSTVIEW_FRAME;
         }
         if (mJpegCallback != null) {
             msgType |= CAMERA_MSG_COMPRESSED_IMAGE;
         }
+        //oneplus camera mod
+        if (mOneplusCallback != null) {
+            msgType |= CAMERA_MSG_DNG_META_DATA;
+            msgType |= CAMERA_MSG_DNG_IMAGE;
+            mMetadata = new CameraMetadataNative();
+
+            try{
+                java.lang.reflect.Field ptrField = CameraMetadataNative.class.  
+                getDeclaredField("mMetadataPtr");  
+                ptrField.setAccessible(true);
+                mMetadataPtr = (long) ptrField.get(mMetadata);
+                }
+                catch(Exception x){
+                    
+                };
+
+        }
+  
+        //if (mProcessCallback != null) {
+        //    msgType |= CAMERA_MSG_IN_PROCESSING;
+        //}
 
         native_takePicture(msgType);
         mFaceDetectionRunning = false;
-- 
2.7.4

