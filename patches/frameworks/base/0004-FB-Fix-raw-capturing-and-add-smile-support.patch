From 335f56a0e49c4426e7252bb3ba74a57c21f7e45c Mon Sep 17 00:00:00 2001
From: siankatabg <siankata91@gmail.com>
Date: Fri, 11 Aug 2017 16:18:22 +0100
Subject: [PATCH 4/4] FB: Fix raw capturing and add smile support

All credits to @kxzxxx and @amirzaidi

Change-Id: I3a36f61cd68784f0f85a72386e515bf293087a7c
---
 core/java/android/hardware/Camera.java | 41 +++++++++++++++++++---------------
 1 file changed, 23 insertions(+), 18 deletions(-)

diff --git a/core/java/android/hardware/Camera.java b/core/java/android/hardware/Camera.java
index 29363ed..99093aa 100644
--- a/core/java/android/hardware/Camera.java
+++ b/core/java/android/hardware/Camera.java
@@ -18,6 +18,7 @@ package android.hardware;
 import android.hardware.camera2.CameraCharacteristics;
 import android.hardware.camera2.impl.CameraMetadataNative;
 import android.hardware.camera2.CaptureResult;
+import android.hardware.camera2.CaptureRequest.Builder;
 import android.hardware.camera2.CaptureRequest;
 import android.hardware.camera2.impl.CaptureResultExtras;
 import android.hardware.camera2.CameraManager;
@@ -590,7 +591,6 @@ public class Camera {
     }
 
     private int cameraInitVersion(int cameraId, int halVersion) {
-        getNativeCameraMetadata(cameraId);
         mShutterCallback = null;
         mRawImageCallback = null;
         mJpegCallback = null;
@@ -1375,26 +1375,18 @@ public class Camera {
             case CAMERA_MSG_DNG_META_DATA:
                 Log.d(TAG,"CAMERA_MSG_DNG_META_DATA");
                 if (mOneplusCallback != null
-                    &&mCharacteristics!=null&&mMetadata!=null) {
-
-                    /* if (true) {
-                        Log.v(TAG, "metadata:");
-                        Log.v(TAG, "--------------------------------------------------- (start)");
-                        mMetadata.dumpToLog();
-                        Log.v(TAG, "--------------------------------------------------- (end)");
-                    }*/ 
-
-                    CaptureResult result=new CaptureResult(mMetadata,-1);
+                    &&mMetadata!=null) {
+                    mCharacteristics = new CameraCharacteristics(new CameraMetadataNative(mMetadata));
+                    CaptureResult result=new CaptureResult(new CameraMetadataNative(mMetadata),-1);
                     mOneplusCallback.onDngMetadata(mCharacteristics, result, mCamera);
-                    
                 }    
             return;
             
             case CAMERA_MSG_IN_PROCESSING:
                 Log.d(TAG,"CAMERA_MSG_IN_PROCESSING");
-                //if (mProcessCallback != null) {
-                //    mProcessCallback.onProcess();
-                //}
+                if (mProcessCallback != null) {
+                    mProcessCallback.onProcess();
+                }
                 return;
 
             default:
@@ -1691,9 +1683,9 @@ public class Camera {
 
         }
   
-        //if (mProcessCallback != null) {
-        //    msgType |= CAMERA_MSG_IN_PROCESSING;
-        //}
+        if (mProcessCallback != null) {
+            msgType |= CAMERA_MSG_IN_PROCESSING;
+        }
 
         native_takePicture(msgType);
         mFaceDetectionRunning = false;
@@ -2058,6 +2050,12 @@ public class Camera {
          */
         public int id = -1;
 
+        public int isSmile = 0;
+
+        public int getIsSmile() {
+            return isSmile;
+        }
+
         /**
          * The coordinates of the center of the left eye. The coordinates are in
          * the same space as the ones for {@link #rect}. This is an optional
@@ -2624,6 +2622,8 @@ public class Camera {
         private static final String TRUE = "true";
         private static final String FALSE = "false";
 
+        private static final String KEY_QC_SMILE_DETECTION = "smile-detection";
+
         // Values for white balance settings.
         public static final String WHITE_BALANCE_AUTO = "auto";
         public static final String WHITE_BALANCE_INCANDESCENT = "incandescent";
@@ -4291,6 +4291,11 @@ public class Camera {
             return TRUE.equals(str);
         }
 
+        public boolean isSupportedSmileDetection() {
+            String str = get(KEY_QC_SMILE_DETECTION);
+            return TRUE.equals(str);
+        }
+
         /**
          * <p>Gets the distances from the camera to where an object appears to be
          * in focus. The object is sharpest at the optimal focus distance. The
-- 
2.7.4

